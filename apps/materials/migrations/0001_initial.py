# Generated by Django 3.1.4 on 2020-12-27 10:34

import apps.core.models
import apps.materials.models
from django.db import migrations, models
import django.db.models.deletion
import django_fsm


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Input',
            fields=[
                ('id', models.CharField(blank=True, default=apps.core.models.generate_ulid, editable=False, max_length=26, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=96, verbose_name='Name')),
                ('category', models.CharField(choices=[('RAW', 'Raw Material'), ('MRO', 'Maintenance/Operating Supplies'), ('PACKAGING', 'Packaging/Disposable'), ('OTHER', 'Other/Misc')], default='RAW', max_length=32, verbose_name='Category')),
                ('manufacturer_item_number', models.CharField(blank=True, max_length=32, null=True, verbose_name='Manufacturer Item Number')),
                ('pack_size', models.PositiveSmallIntegerField(default=1)),
                ('pack_total_weight', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Pack total, weight (std)')),
                ('pack_total_volume', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Pack total, volume (std)')),
                ('pack_total_each', models.PositiveSmallIntegerField(default=0, verbose_name='Pack total, each')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('is_preferred', models.BooleanField(default=False)),
                ('state', django_fsm.FSMField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('DISQUALIFIED', 'Disqualifed'), ('NAN', 'No Approval Necessary')], default='PENDING', max_length=50, verbose_name='Status')),
            ],
            options={
                'ordering': ['name'],
                'permissions': [('change_input_status', 'Can change status of input')],
                'get_latest_by': ['version'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.CharField(blank=True, default=apps.core.models.generate_ulid, editable=False, max_length=26, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=96, verbose_name='Name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('state', django_fsm.FSMField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('DISQUALIFIED', 'Disqualifed'), ('NAN', 'No Approval Necessary'), ('LAPSED', 'Lapsed')], default='PENDING', max_length=50, verbose_name='Status')),
            ],
            options={
                'ordering': ['name'],
                'permissions': [('change_manufacturer_status', 'Can change status of manufacturer')],
                'get_latest_by': ['version'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.CharField(blank=True, default=apps.core.models.generate_ulid, editable=False, max_length=26, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=96, verbose_name='Name')),
                ('category', models.CharField(choices=[('RAW', 'Raw Material'), ('WIP', 'Work-in-Progress'), ('FINISHED', 'Finished Product'), ('SERVICE', 'Service'), ('MRO', 'Maintenance/Operating Supplies'), ('PACKAGING', 'Packaging/Disposable'), ('OTHER', 'Other/Misc')], default='RAW', max_length=32, verbose_name='Category')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('unit_type', models.CharField(choices=[('WEIGHT', 'Weight'), ('VOLUME', 'Volume'), ('EACH', 'Each'), ('MISC', 'Miscellaneous'), ('INVENTORY', 'Inventory')], default='WEIGHT', max_length=32, verbose_name='Unit Type')),
                ('upc_code', models.CharField(blank=True, max_length=12, null=True, verbose_name='UPC Code')),
                ('shelf_life', models.PositiveIntegerField(default=0, verbose_name='Shelf Life')),
                ('version', models.PositiveSmallIntegerField(default=1)),
            ],
            options={
                'ordering': ['name'],
                'get_latest_by': ['version'],
            },
        ),
        migrations.CreateModel(
            name='MaterialUnit',
            fields=[
                ('id', models.CharField(blank=True, default=apps.core.models.generate_ulid, editable=False, max_length=26, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('allowed_weight', models.BooleanField(default=True)),
                ('allowed_volume', models.BooleanField(default=False)),
                ('allowed_each', models.BooleanField(default=False)),
                ('ratio_weight_to_volume', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Ratio of weight to volume, (standardized)')),
                ('ratio_weight_to_each', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Ratio of weight to each, (standardized)')),
                ('ratio_volume_to_each', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Ratio of volume to each, (standardized)')),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('material', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='permitted_units', to='materials.material')),
            ],
            options={
                'ordering': ['material'],
                'get_latest_by': ['version'],
            },
        ),
        migrations.CreateModel(
            name='MaterialCost',
            fields=[
                ('id', models.CharField(blank=True, default=apps.core.models.generate_ulid, editable=False, max_length=26, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('unit_cost_weight', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Cost per unit, weight, (standardized)')),
                ('unit_cost_volume', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Cost per unit, volume (standardized)')),
                ('unit_cost_each', models.DecimalField(decimal_places=3, default=0.0, max_digits=7, verbose_name='Cost per each')),
                ('basis', models.CharField(choices=[('DIRECT', 'Directly Assigned'), ('CALCULATED', 'Calculated'), ('NAIVE', 'Na√Øve'), ('CUMULATIVE', 'Cumulative'), ('MA3', 'Moving Average (3)'), ('MA5', 'Moving Average (5)'), ('MA7', 'Moving Average (5)'), ('EXP', 'Exponential Smoothing')], default='DIRECT', max_length=24, verbose_name='Assignment basis')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='costs', to='materials.material')),
            ],
            options={
                'ordering': ['material', 'created_at'],
                'get_latest_by': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaterialCharacteristics',
            fields=[
                ('id', models.CharField(blank=True, default=apps.core.models.generate_ulid, editable=False, max_length=26, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('characteristics', models.JSONField(default=apps.materials.models.generate_characteristics, verbose_name='Characteristics')),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('state', django_fsm.FSMField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('DISQUALIFIED', 'Disqualifed'), ('NAN', 'No Approved Necessary')], default='PENDING', max_length=50, verbose_name='Status')),
                ('material', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='characteristics', to='materials.material')),
            ],
            options={
                'verbose_name_plural': 'Material characteristics',
                'get_latest_by': ['version'],
            },
        ),
        migrations.CreateModel(
            name='InputInventoryEvent',
            fields=[
                ('inventoryevent_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.inventoryevent')),
                ('input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_events', to='materials.input')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.inventoryevent',),
        ),
        migrations.CreateModel(
            name='InputCharacteristics',
            fields=[
                ('id', models.CharField(blank=True, default=apps.core.models.generate_ulid, editable=False, max_length=26, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('characteristics', models.JSONField(verbose_name='Characteristics')),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('input', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characteristics', to='materials.input')),
            ],
            options={
                'verbose_name_plural': 'Input characteristics',
                'get_latest_by': ['version'],
            },
        ),
        migrations.AddField(
            model_name='input',
            name='manufacturer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='materials.manufacturer'),
        ),
        migrations.AddField(
            model_name='input',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='materials.material'),
        ),
        migrations.AddField(
            model_name='input',
            name='unit',
            field=models.ForeignKey(help_text='Default Unit of Measurement (UOM)', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='core.unitmeasurement'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('materials.material',),
        ),
        migrations.CreateModel(
            name='ProductCharacteristics',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('materials.materialcharacteristics',),
        ),
        migrations.CreateModel(
            name='ProductCost',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('materials.materialcost',),
        ),
        migrations.CreateModel(
            name='ProductUnit',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('materials.materialunit',),
        ),
    ]
